<?php
/**
 * Created by PhpStorm.
 * User: ELL
 * Date: 28/11/2017
 * Time: 11.51
 */

namespace backend\controllers\operator;
use backend\models\KategoriPembangunan;
use backend\models\Mitra;
use backend\models\Pembangunan;
use backend\models\StatusPembangunan;
use backend\models\SumberDanaPembangunan;
use Yii;
use yii\base\Exception;
use yii\helpers\Url;
use backend\models\Uploader;
use yii\web\UploadedFile;

use backend\controllers\BaseController;

class PembangunanController extends BaseController
{
    public function behaviors()
    {
        return parent::behaviors(); // TODO: Change the autogenerated stub
    }
    public function actions()
    {
        return parent::actions(); // TODO: Change the autogenerated stub
    }
    public function  actionIndex()
    {
        if (!parent::isLogin()) {
            return $this->redirect(Url::toRoute('site/login'));
        }


        $data = Pembangunan::find()->all();
        $sesi = $this->activeUser;
        $isAdmin = $this->isAdmin();

        $params = [
            'data' => $data,
            'sesi' => $sesi,
            'isAdmin' => $isAdmin
        ];
        if (Yii::$app->request->isPost) {
            return $this->renderPartial('index.tpl', $params);
        } else {
            return $this->render('index.tpl', $params);
        }
    }

    public function actionForm(){
        $id=Yii::$app->request->post('id',0);
        if($id){
            $data=Pembangunan::findOne($id);
        }else{
            $data=new Pembangunan();
        }
        $sumberOption=[];
        $sumber=SumberDanaPembangunan::find()->all();
        foreach($sumber as $item){
            $sumberOption[$item->id]=$item->nama;
        }
        $kategoriOption=[];
        $kategori=KategoriPembangunan::find()->all();
        foreach ($kategori as $item){
            $kategoriOption[$item->id]=$item->nama;
        }
        $statusOption=[];
        $status=StatusPembangunan::find()->all();
        foreach ($status as $item){
            $statusOption[$item->id]=$item->nama;
        }
        $mitraOption=[];
        $mitra=Mitra::find()->all();
        foreach ($mitra as $item){
            $mitraOption[$item->id]=$item->nama_mitra;
        }
        $sesi = $this->activeUser;

        $params=[
            'data'=>$data,
            'sumberOption'=>$sumberOption,
            'kategoriOption'=>$kategoriOption,
            'statusOption'=>$statusOption,
            'mitraOption'=>$mitraOption,
            'sesi'=>$sesi->id
        ];

        return $this->renderPartial('form.tpl', $params);
    }
    public function actionSave(){
        $id=Yii::$app->request->post('id',0);
        if($id){
            $data=Pembangunan::findOne($id);
        }else{
            $data=new Pembangunan();
        }

        $data->nama_pembangunan=Yii::$app->request->post('nama_pembangunan','');
        $data->anggaran=Yii::$app->request->post('anggaran','');
        $data->tgl_mulai=Yii::$app->request->post('tgl_mulai','');
        $data->tgl_selesai=Yii::$app->request->post('tgl_selesai','');
        $data->longitude=Yii::$app->request->post('longitude','');
        $data->latitude=Yii::$app->request->post('latitude','');
        $data->keterangan=Yii::$app->request->post('keterangan','');
	$data->prosentase=0;
        $data->sumber_dana_pembangunan_id=intval(Yii::$app->request->post('sumber_dana_pembangunan_id',''));
        $data->kategori_pembangunan_id=intval(Yii::$app->request->post('kategori_pembangunan_id',''));
        $data->status_pembangunan_id=intval(Yii::$app->request->post('status_pembangunan_id',''));
        $data->mitra_id=intval(Yii::$app->request->post('mitra_id',''));
        $data->users_id=intval(Yii::$app->request->post('users_id',''));
        $file = new Uploader();
        $file->file = UploadedFile::getInstance($file, 'file');
        if (!is_null($file->file)) {
            if (!file_exists('uploads/pembangunan')) {
                mkdir('uploads/pembangunan', 0777, true);
            }
            $file->extension = ['jpg', 'png'];
            $file->destination = 'uploads/pembangunan/';

            if ($file->upload()) {
                $filename = $file->uploadedFile;
            } else {
                $filename = null;
            }
            $oldFile = $data->foto;
            if (strlen($oldFile) > 0) {
                @unlink('uploads/pembangunan/' . $oldFile);
            }
            $data->foto = $filename;
        }else{
            
             return "
            <div class='alert alert-danger'>Terjadi kesalahan! Foto gagal disimpan</div>";
        }

        try{
		$data->save();
		return "
		<div class='alert alert-success'>Data berhasil disimpan!<div>
			<script>reloadData();closeModal(1500);</script>";
	}catch(Exception $e){
		return "<div class='alert alert-danger'>Terjadi Kesalahan ! Data gagal disimpan</div>";
	}
     }
    public function actionDetail(){

    }
    public function actionDelete(){
        $id = Yii::$app->request->post('id', 0);
        $data = Pembangunan::findOne($id);
        try {
            $data->delete();
            return "
            <div class='alert alert-success'>Data berhasil dihapus</div>
            <script> reloadData(); closeModal(1500); </script>";
        } catch (Exception $e) {
            return "
            <div class='alert alert-danger'>Terjadi kesalahan! Data gagal dihapus</div>";
        }

    }
}
